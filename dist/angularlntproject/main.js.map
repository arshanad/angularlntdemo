{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/about/about.component.ts","./src/app/components/about/about.component.html","./src/app/components/add-user/add-user.component.ts","./src/app/components/add-user/add-user.component.html","./src/app/components/bindingsdemo/bindingsdemo.component.ts","./src/app/components/bindingsdemo/bindingsdemo.component.html","./src/app/components/contact/contact.component.ts","./src/app/components/contact/contact.component.html","./src/app/components/employee/employee.component.ts","./src/app/components/employee/employee.component.html","./src/app/components/event-list/event-list.component.ts","./src/app/components/event-list/event-list.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/ngclassdemo/ngclassdemo.component.ts","./src/app/components/ngclassdemo/ngclassdemo.component.html","./src/app/components/reactive-form/reactive-form.component.ts","./src/app/components/reactive-form/reactive-form.component.html","./src/app/components/user/user.component.ts","./src/app/components/user/user.component.html","./src/app/pipes/gender.pipe.ts","./src/app/services/event.service.ts","./src/app/services/user.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './components/home/home.component';\nimport { ContactComponent } from './components/contact/contact.component';\nimport { AboutComponent } from './components/about/about.component';\nimport { EmployeeComponent } from './components/employee/employee.component';\nimport { EventListComponent } from './components/event-list/event-list.component';\nimport { ReactiveFormComponent } from './components/reactive-form/reactive-form.component';\nimport { UserComponent } from './components/user/user.component';\nimport { AddUserComponent } from './components/add-user/add-user.component';\nimport { BindingsdemoComponent } from './components/bindingsdemo/bindingsdemo.component';\nimport { NgclassdemoComponent } from './components/ngclassdemo/ngclassdemo.component';\n\n\nconst routes: Routes = [\n  {path:'',component:HomeComponent},\n  {path:'contact',component:ContactComponent},\n  {path:'about',component:AboutComponent},\n  {path:'emp',component:EmployeeComponent},\n  {path:'eventList',component:EventListComponent},\n  {path:'reactiveForm',component:ReactiveFormComponent},\n  {path:'user',component:UserComponent},\n  {path:'addUser',component:AddUserComponent},\n  {path:'bindings',component:BindingsdemoComponent},\n  {path:'ngclass',component:NgclassdemoComponent}\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angularlntproject';\n}\n\n","<nav class=\"navbar navbar-default\">\n    <div class=\"container-fluid\">\n        <ul class=\"nav navbar-nav\">\n            <li><a routerLink=\"/\">Home</a></li>\n            <li><a routerLink=\"/about\">About Us</a></li>\n            <li><a routerLink=\"/contact\">Contact</a></li>\n            <li><a routerLink=\"/emp\">Employee</a></li>\n            <li><a routerLink=\"/eventList\">Event List</a></li>\n            <li><a routerLink=\"/reactiveForm\">Reactive Form</a></li>\n            <li><a routerLink=\"/user\">User</a></li>\n            <li><a routerLink=\"/bindings\">Bindings Demo</a></li>\n            <li><a routerLink=\"/ngclass\">Ngclass</a></li>\n        </ul>\n      ...\n    </div>\n  </nav>\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {FormsModule} from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { ContactComponent } from './components/contact/contact.component';\nimport { AboutComponent } from './components/about/about.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { EmployeeComponent } from './components/employee/employee.component';\nimport { GenderPipe } from './pipes/gender.pipe';\nimport { EventListComponent } from './components/event-list/event-list.component';\nimport { ReactiveFormComponent } from './components/reactive-form/reactive-form.component';\nimport { UserComponent } from './components/user/user.component';\nimport { AddUserComponent } from './components/add-user/add-user.component';\nimport { BindingsdemoComponent } from './components/bindingsdemo/bindingsdemo.component';\nimport { NgclassdemoComponent } from './components/ngclassdemo/ngclassdemo.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    ContactComponent,\n    AboutComponent,\n    LoginComponent,\n    EmployeeComponent,\n    GenderPipe,\n    EventListComponent,\n    ReactiveFormComponent,\n    UserComponent,\n    AddUserComponent,\n    BindingsdemoComponent,\n    NgclassdemoComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>about works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { UserService } from 'src/app/services/user.service';\nimport {UserTable} from 'src/app/Model/UserTable'\n\n \n\n@Component({\n  selector: 'app-add-user',\n  templateUrl: './add-user.component.html',\n  styleUrls: ['./add-user.component.css']\n})\nexport class AddUserComponent implements OnInit {\n  addForm:FormGroup;\n  constructor(private formBuilder:FormBuilder,private _userService:UserService) { }\n\n \n\n  ngOnInit(): void {\n    this.addForm=this.formBuilder.group({\n      id:[],\n      firstName:[\"\",Validators.required],\n      lastName:[\"\",Validators.required],\n      email:[\"\",[Validators.required,Validators.email]]\n    })\n  }\n  onSubmit(form:UserTable)\n  {\n    //console.log(form);\n\n    this._userService.addUser(form).subscribe(\n      data => {\n        //console.log(data);\n        alert(\"User added successfully\");\n      }\n    );  \n  }\n}","<br /><br />\n<div class=\"col-md-6 col-md-offset-2\">\n    <h3>Add User</h3>\n    <br />\n\n \n\n    <!-- Designing Add User Form-->\n    <form [formGroup]=\"addForm\" (ngSubmit)=\"onSubmit(addForm.value)\">\n\n \n\n        <div class=\"form-group\">\n            <label for=\"firstName\">First Name: </label>\n            <input type=\"text\" class=\"form-control\" formControlName=\"firstName\" id=\"firstName\" />\n\n \n\n            <!-- <div *ngIf=\"submitted && addForm.controls.firstName.errors\" class=\"error\">\n                <div class=\"text-danger\" *ngIf=\"addForm.controls.firstName.errors.required\">\n                    FirstName is required ..\n                </div>\n            </div> -->\n        </div>\n        <div class=\"form-group\">\n            <label for=\"lastName\">Last Name: </label>\n            <input type=\"text\" class=\"form-control\" formControlName=\"lastName\" id=\"lastName\" />\n\n \n\n            <!-- <div *ngIf=\"submitted && addForm.controls.lastName.errors\" class=\"error\">\n                <div class=\"text-danger\" *ngIf=\"addForm.controls.lastName.errors.required\">\n                    LastName is required ..\n                </div>\n            </div> -->\n        </div>\n        <div class=\"form-group\">\n            <label for=\"email\">Email Address: </label>\n            <input type=\"email\" class=\"form-control\" formControlName=\"email\" id=\"email\" />\n\n \n\n            <!-- <div *ngIf=\"submitted && addForm.controls.email.errors\" class=\"error\">\n                <div class=\"text-danger\" *ngIf=\"addForm.controls.email.errors.required\">\n                    Email is required ..\n                </div>\n                <div class=\"text-danger\" *ngIf=\"addForm.controls.email.errors.email\">\n                    Invalid Email ..\n                </div>\n            </div> -->\n        </div>\n\n \n\n        <button class=\"btn btn-success\">Save</button> &nbsp;&nbsp;\n        <button class=\"btn btn-danger\" type=\"reset\">Cancel</button>\n        &nbsp;&nbsp;\n        <a class=\"btn btn-warning\" [routerLink]=\"['/user']\">Back to User</a>\n        <br /><br />\n\n \n\n\n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-bindingsdemo',\n  templateUrl: './bindingsdemo.component.html',\n  styleUrls: ['./bindingsdemo.component.css']\n})\nexport class BindingsdemoComponent implements OnInit {\n\nitemCount: number = 1;\nbtnText:string=\"Add an Item\";\nmessage:string=\"Hello Students\";\ngoals=[];\ngoal='Be a good human being-Never lie';\nconstructor() { }  \nngOnInit() {}\n\naddItem() {\n    this.goals.push(this.goal);  \n      this.goal= ''; \n       this.itemCount = this.goals.length;\n  }\n}","<!-- Interpolation Example: -->\n<div> Item Count : ({{ itemCount }})</div>\n<!-- Property Binding  : -->\n<input type=\"submit\" class=\"btn btn-success\"[value] =\"btnText\">\n<input type=\"submit\" class=\"btn btn-primary\" value=\"{{ btnText }}\">\n<!-- One way data binding  :  -->\n<input name=\"message\" placeholder=\"Message..\" [ngModel]=\"message\">\n<span>{{ message }}</span><br>\n\n<!-- Two way data binding  :  -->\n<input name=\"message\" placeholder=\"Message..\" [(ngModel)]=\"message\">\n<span>{{ message }}</span><br>\n\n<!--Event Binding Example -->\n<input type=\"submit\" class=\"btn\" value=\"{{ btnText }}\" (click)=\"addItem()\">\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>contact works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { Product } from '../../Model/Product';\n\n@Component({\n  selector: 'app-employee',\n  templateUrl: './employee.component.html',\n  styleUrls: ['./employee.component.css']\n})\nexport class EmployeeComponent implements OnInit {\n  Subjects: string[] = [\"Angular\", \"Java\", \"Dotnet\"];\n  ShowFaculty: boolean = false;\n  FacultyName: string = \"Rashmi\";\n  employees: any[] = [\n    {\n      code: 'emp101', name: 'Rashmi', gender: 'Female',\n      annualSalary: 5500, dateOfBirth: '05/16/1988'\n    },\n    {\n      code: 'emp101', name: 'Nisha', gender: 'Female',\n      annualSalary: 5500, dateOfBirth: '05/16/1988'\n    },\n    {\n      code: 'emp101', name: 'Abhay', gender: 'Male',\n      annualSalary: 5500, dateOfBirth: '05/16/1988'\n    }\n  ]\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  // Object\n  pro:Product={id:11,name:\"Note8\",cost:43434,category:'Electronics'};\n\n  // Array\n  products:Product[]=[\n    {id:11,name:\"Note8\",cost:43434,category:'Electronics'},\n    {id:12,name:\"Keyboard\",cost:3434,category:'Electronics'},\n    {id:13,name:\"Chair\",cost:4434,category:'Furniture'}\n  ];\n  myFunction() {\n    alert(\"You Clicked Me\");\n  }\n  //Function with parameters\n  deleteProduct(id: number) {\n    alert(\"Product to be deleted\" + id)\n  }\n  editProduct(id: number, name: string) {\n    alert(`Product to be edited ${id} and ${name}`);\n  }\n}\n","<h1>Employee Table</h1>\n<p>Subjects:<span *ngFor=\"let s of Subjects\">{{s+\",\"}}</span></p>\n<span *ngIf=\"ShowFaculty\">{{FacultyName}}</span>\n<table class=\"table table-bordered\">\n    <thead>\n        <tr>\n            <th>Code</th>\n            <th>Name</th>\n            <th>Gender</th>\n            <th>Annual Salary</th>\n            <th>Date of Birth</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let emp of employees\">\n            <td> {{emp.code}}</td>\n            <td>{{emp.name | uppercase|gender_pipe:emp.gender}}</td>\n            <td>{{emp.gender}}</td>\n            <td>{{emp.annualSalary}}</td>\n            <td>{{emp.dateOfBirth | date:\"fullDate\"}}</td>\n        </tr>\n        <tr *ngIf=\"employees.length==0 || !employees\">\n            <td colspan=\"5\">No employees to display</td>\n        </tr>\n    </tbody>\n</table>\n<h1 >Display data using Interpolation From Object</h1>\n<table class=\"table table-bordered\" >\n    <tbody>\n        <tr>  <td> ID</td> <td>{{pro.id}}</td> </tr>\n        <tr><td> Name</td> <td>{{pro.name}}</td></tr>\n        <tr><td> Cost</td> <td>{{pro.cost}}</td> </tr>\n        <tr><td> Category</td> <td>{{pro.category}}</td></tr>\n    </tbody>\n</table>\n\n<h1 >Display data using Interpolation \n    From Array Of Object</h1>\n<table class=\"table table-bordered\">\n     <thead><tr><th> Name</th><th>Cost</th> <th>Category</th>\n         </tr>\n     </thead>\n     <tbody >\n         <tr *ngFor=\"let pro of products\">\n             <td>{{pro.name}}</td>\n             <td>{{pro.cost}}</td>\n             <td>{{pro.category}}</td>\n         </tr>\n           \n     </tbody>\n</table>\n<button class=\"btn btn-success\" (click)=\"myFunction()\">Click Me</button>&nbsp;&nbsp;\n<button class=\"btn btn-danger\" (click)=\"deleteProduct(100)\">Delete</button>&nbsp;&nbsp;\n<button class=\"btn btn-info\" (click)=\"editProduct(100,'Note2')\">Edit</button>\n\n","import { Component, OnInit } from '@angular/core';\nimport{EventService} from 'src/app/services/event.service';\nimport{Event} from 'src/app/Model/Event';\nimport{Form} from '@angular/forms';\n\n@Component({\n  selector: 'app-event-list',\n  templateUrl: './event-list.component.html',\n  styleUrls: ['./event-list.component.css']\n})\nexport class EventListComponent implements OnInit {\n  events:Event[]=[];\n  constructor(private eventService: EventService) { }\n\n  ngOnInit(): void {\n    this.events=this.eventService.getEvents();\n  }\n  addEvent(eventName: string, desc: string, speaker: string) {\n    this.eventService.addEvent(eventName, desc, speaker);\n  }\n  deleteEvent(event:Event)\n  {\n    this.eventService.deleteEvent(event);\n  }\n\n}\n","<h2 >Events List</h2>\n<table class=\"table table-bordered\">\n    <thead>\n        <tr>\n            <th>Id</th>\n            <th>Name</th>\n            <th>Description</th>\n            <th>Speaker</th>\n        </tr>\n    </thead>\n    <tbody>\n    <tr *ngFor=\"let event of events\">\n        <td>{{event.id}}</td>\n        <td>{{event.name}}</td>\n        <td>{{event.description}}</td>\n        <td>{{event.speaker}}</td>\n        <td class=\"List\"><button class=\"btn btn-danger\" (click)=\"deleteEvent(event)\">X</button></td>\n    </tr>\n    <tr *ngIf=\"events.length==0 || !events\">\n        <td colspan=\"4\">No events to display</td>\n    </tr>\n</tbody>\n</table>\n<div class=\"well\">\n    <form class=\"form-inline\">\n        <div class=\"from-group\">\n            <input placeholder=\"Event Name\" class=\"form-control\" #eventname/>\n        </div>\n        <div class=\"from-group\">\n            <input placeholder=\"Description\" class=\"form-control\" #desciption/>\n        </div>\n        <div class=\"from-group\">\n            <input placeholder=\"Speaker\" class=\"form-control\" #speaker/>\n        </div>\n        <button (click)=\"addEvent(eventname.value,desciption.value,speaker.value )\" type=\"button\">Add New Event</button>\n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  Fname:string[]=[\"Anurag\",\"Animesh\",\"Arhan\"];\n  Lname:string[]=[\"Dutta\",\"Mukherjee\",\"Das\"];\n  Age:number[]=[29,24,22];\n  Salary:number[]=[50000,47000,49000];\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}","<h1>Welcome to Home page</h1>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>login works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-ngclassdemo',\n  templateUrl: './ngclassdemo.component.html',\n  styleUrls: ['./ngclassdemo.component.css']\n})\nexport class NgclassdemoComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  getColor(country) {\n    switch (country) {\n      case 'UK':\n        return 'green';\n      case 'USA':\n        return 'blue';\n      case 'HK':\n        return 'red';\n    }\n  }\n\npeople: any[] = [\n    {\n      \"name\": \"Mayank\",\n      \"country\": 'UK'\n    },\n    {\n      \"name\": \"Shreya\",\n      \"country\": 'USA'\n    },\n    {\n      \"name\": \"Khushi\",\n      \"country\": 'HK'\n    },\n    {\n      \"name\": \"Kawal\",\n      \"country\": 'UK'\n    },\n    {\n      \"name\": \"Sonali\",\n      \"country\": 'India'\n    }\n  ];\n\n}\n","<div [ngStyle]=\"{'background-color':'red'}\">Happy </div>\n\n\n\n<h4>NgStyle</h4>\n<ul *ngFor=\"let person of people\">\n    <li [ngStyle]=\"{'color':getColor(person.country)}\">\n        {{ person.name }}\n        {{ person.country }}\n    </li>\n</ul>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\n@Component({\n  selector: 'app-reactive-form',\n  templateUrl: './reactive-form.component.html',\n  styleUrls: ['./reactive-form.component.css']\n})\nexport class ReactiveFormComponent implements OnInit {\n  //declare an variable for creating the form\n  form: FormGroup;\n  constructor() { }\n  ngOnInit(): void {\n    this.form = new FormGroup({\n      name: new FormControl( \"\",[Validators.required,Validators.pattern('[a-zA-Z]+')]),\n      contact: new FormControl(\"\", [Validators.required, Validators.pattern('[0-9]{10}')]),\n      email: new FormControl(\"\",[Validators.required, Validators.email])\n    })\n  }\n  AddUser(form) {\n    alert(\"Hello\");\n    console.log(form.value);\n    alert(form.value.name);\n  }\n}\n","<h1>Reactive Form demo</h1>\n<form [formGroup]=\"form\" (ngSubmit)='AddUser(form)'>\n    <div class=\"form-group\">\n        <label for=\"name\">Name</label>\n        <input type=\"text\" formControlName=\"name\" name=\"name\" value=\"\" class=\"form-control\" />\n        <div *ngIf=\"form.get('name').hasError('required')&& form.get('name').touched\" class=\"alert alert-danger\">\n            Name is required\n        </div> \n        <div *ngIf=\"form.get('name').hasError('pattern')\" class=\"alert alert-danger\">\n            Please Enter only alphabets\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <label for=\"contact\">Contact</label>\n        <input type=\"text\" formControlName=\"contact\" name=\"contact\" value=\"\" class=\"form-control\" />\n        <div *ngIf=\"form.get('contact').hasError('required')&& form.get('contact').touched\" class=\"alert alert-danger\">\n            Contact is required\n        </div> \n        <div *ngIf=\"form.get('contact').hasError('pattern')\" class=\"alert alert-danger\">\n            Please Enter 10 digits\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <label for=\"email\">Email</label>\n        <input type=\"text\" formControlName=\"email\" name=\"email\" value=\"\" class=\"form-control\" />\n        <div *ngIf=\"form.get('email').hasError('required')&& form.get('email').touched\" class=\"alert alert-danger\">\n            Email is required\n        </div>\n        <div *ngIf=\"form.get('email').hasError('email')\" class=\"alert alert-danger\">\n            Please Enter valid Email Address\n        </div>\n    </div>\n    <button type=\"submit\" [disabled]=\"form.invalid\" class=\"btn btn-success\">Add New User </button>\n</form>\n{{form.value | json}}","import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\nimport { UserTable } from 'src/app/Model/UserTable';\nimport { RouterModule, RouterLink, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n  //Variable of type UserTable \n  users: UserTable[];\n\n  //DI\n  constructor(private _userService: UserService,private _router: Router) { }\n\n  ngOnInit(): void {\n    this._userService.getAllUsers()\n      .subscribe(data => {\n        this.users = data;\n      });\n  }\n  addUser(){\n    this._router.navigate(['addUser']);\n  }\n  deleteUser(user:UserTable)\n  {\n    this._userService.deleteUser(user.id).subscribe(data=>{\n    });\n  }\n\n  // this.userService.getUsers()\n  //       .subscribe(data => {\n  //         this.users = data;\n  //       });\n  //GetMethod\n  // getAllUsersFun() {\n  //   this._userService.getAllUsers()\n  //     .subscribe(data => { this.users = data });\n  // }\n}","<button class=\"btn btn-success\" (click)=\"addUser()\">Add User</button>\n<button class=\"btn btn-success\">Log Off</button>\n<table class=\"table table-striped \n            table-responsive table-hover\">\n    <thead>\n        <th class=\"text-hide\">Id</th>\n        <th>First Name</th>\n        <th>Last Name</th>\n        <th>Email</th>\n        <th>Action</th>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let user of users\">\n            <td class=\"text-hide\">{{ user.id }}</td>\n            <td>{{ user.firstName  }}</td>\n            <td>{{ user.lastName  }}</td>\n            <td>{{ user.email | titlecase }}</td>\n            <td>\n                <button class=\"btn btn-danger\" (click)=\"deleteUser(user)\">Delete</button>\n\n\n                <button class=\"btn btn-primary\">Edit</button>\n            </td>\n        </tr>\n        <tr *ngIf=\"!users || users.length==0\">\n            <th colspan=\"5\">\n                <p class=\"text-right text-danger\">\n                    Sorry, No users available ..!\n                </p>\n            </th>\n        </tr>\n    </tbody>\n</table>","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'gender_pipe'\n})\nexport class GenderPipe implements PipeTransform {\n\n  transform(value:string,gender:string): string {\n    if(gender.toLowerCase()=='male')\n      return \"Mr.\"+value;\n    else\n      return \"Miss.\"+value;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport{Event} from 'src/app/Model/Event';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventService {\n  events: Event[] = [\n    { id: 1, name: 'Angular', description: 'Angular Event', speaker: 'Himanshu' },\n    { id: 2, name: 'React', description: 'React Event', speaker: 'Saurabh' },\n    { id: 3, name: 'Java', description: 'Java Event', speaker: 'Meenal' }\n];\ngetEvents() {\n  return this.events;\n}\naddEvent(eventName:string,desc:string,speaker:string) { \n  let newEvent= { id: this.events.length+1,\n  name: eventName, description:desc, speaker: speaker };\n  return this.events.push(newEvent);\n}\ndeleteEvent(event:Event){\n  let index=this.events.indexOf(event);\n  return this.events.splice(index, 1);\n}\n  constructor() { }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { UserTable } from '../Model/UserTable';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  //Using Depedency Injection We have to inject the HttpClient Class as a Module in\n  //the service\n  baseURL: string = \"http://localhost:3000/users\";\n  constructor(private _http: HttpClient) {\n\n  }\n  //Get All the Users\n  getAllUsers() {\n    return this._http.get<UserTable[]>(this.baseURL);\n  }\n  addUser(newUser:UserTable) { \n    return this._http.post<UserTable>(this.baseURL,newUser);\n  }\n  deleteUser(id)\n  {\n      return this._http.delete<UserTable>(this.baseURL+\"\\\\\"+id);\n  }\n  editUser(id,editedUser:UserTable)\n  {\n    return this._http.put(this.baseURL+\"\\\\\"+id,editedUser)\n  }\n\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}